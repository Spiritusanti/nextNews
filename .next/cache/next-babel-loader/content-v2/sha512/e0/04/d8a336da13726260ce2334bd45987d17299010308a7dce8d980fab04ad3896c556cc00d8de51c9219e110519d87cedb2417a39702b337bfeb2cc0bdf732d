{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mccra\\\\Documents\\\\webdev\\\\React_projects\\\\academind-react\\\\NextNews\\\\pages\\\\index.js\";\nimport Head from \"next/head\";\nimport { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of React meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}; // export const getServerSideProps = async (context) => {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API, ect....\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// };\n\n\nexport const getStaticProps = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://spiritusanti:emMtuo7kbzEuY&@cluster0.nd1ii.mongodb.net/meetups?retryWrites=true&w=majority\", {\n    useUnifiedTopology: true\n  });\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 3600\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/mccra/Documents/webdev/React_projects/academind-react/NextNews/pages/index.js"],"names":["Head","Fragment","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","useUnifiedTopology","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD,C,CAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,0GADmB,EAEnB;AAAEC,IAAAA,kBAAkB,EAAE;AAAtB,GAFmB,CAArB;AAIA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACW,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,CAvBM;AAyBP,eAAerB,QAAf","sourcesContent":["import Head from \"next/head\";\r\nimport { Fragment } from \"react\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>React Meetups</title>\r\n        <meta name=\"description\" content=\"Browse a huge list of React meetups\" />\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n// export const getServerSideProps = async (context) => {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from an API, ect....\r\n//   return {\r\n//     props: {\r\n//       meetups: DUMMY_MEETUPS,\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport const getStaticProps = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://spiritusanti:emMtuo7kbzEuY&@cluster0.nd1ii.mongodb.net/meetups?retryWrites=true&w=majority\",\r\n    { useUnifiedTopology: true }\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 3600,\r\n  };\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}